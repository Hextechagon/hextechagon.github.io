---
title:  "Network File Server | C++"
layout: post
---

I developed a multi-threaded network file server that provides a hierarchical file system. Clients interact with it over TCP utilizing Berkeley sockets. The file server maintains a consistent file system on disk even when faced with crashes through committing writes. Additionally, it enforces strict access control, allowing files and directories to be read, written, and deleted only by their owner. To maximize concurrency, it uses hand-over-hand locking when traversing a chain of file system entities and Boost upgradable reader-writer locks when accessing disk. The file server also minimizes the number of disk I/Os used to carry out requests by caching the list of free disk blocks between requests.