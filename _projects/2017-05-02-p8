---
title:  "Disk Scheduler | C++"
layout: post
---

I developed a concurrent program that issues and services disk requests, utilizing mutexes and condition variables for synchronization. It consists of a servicer thread and multiple requester threads. Each requester thread synchronously issues requests for disk tracks and inserts them into a shared disk queue. The disk queue has a maximum size, so requester threads must wait if the queue is full. The servicer services requests in Shortest Seek Time First order, selecting the request closest to its current track to minimize seek time.